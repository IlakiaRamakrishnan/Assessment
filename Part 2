import java.util.*;

public class DoomedDice {
    public static void main(String args[]){
        int [] diceA = {0,0,0,0,0,0};
        int [] diceB = {0,0,0,0,0,0};
        int [] TransA = new int[6];
        int [] TransB = new int[6];
        Map<Integer, Integer> probHash = new HashMap<Integer, Integer>(){{
            put(2,1);
            put(3, 2);
            put(4, 3);
            put(5, 4);
            put(6, 5);
            put(7, 6);
            put(8, 5);
            put(9, 4);
            put(10, 3);
            put(11, 2);
            put(12, 1);
        }};
        for(int Aface = 0; Aface < 6; Aface++){
            for(int Bface = 0; Bface < 6; Bface++){
                int aindex = 1;
                int bindex = 1;
                while(aindex <= 4){
                    while(bindex <= 8){
                        if (probHash.containsKey(aindex + bindex)) {
                            diceA[Aface] = aindex;
                            diceB[Bface] = bindex;
                            int key = aindex + bindex;
                            int value = probHash.get(key);
                            if (probability(diceA, diceB, key, value)) {
                                TransA = Arrays.copyOf(diceA, diceA.length);
                                TransB = Arrays.copyOf(diceB, diceB.length);
                            }
                        }
                        bindex++;
                    }
                    aindex++;
                    bindex = 1;
                }
            }
        }
        
        // Print TransA and TransB arrays
        System.out.println("TransA: " + Arrays.toString(TransA));
        System.out.println("TransB: " + Arrays.toString(TransB));
    }

    // Function to calculate probability
    public static boolean probability(int[] diceA, int[] diceB, int key, int value) {
        int count = 0;
        for (int i = 0; i < 6; i++) {
            for (int j = 0; j < 6; j++) {
                if (diceA[i] + diceB[j] == key) {
                    count++;
                }
            }
        }
        return count == value;
    }
}
